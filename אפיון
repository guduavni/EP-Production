## מסמך תיעוד מערכת: EP-Simulator - ICAO English Proficiency Assessment

### 1. מטרת המערכת

המערכת נועדה לבחון את רמת הבקיאות באנגלית תעופתית של טייסים, בהתאם לתבחיני ICAO (הארגון הבינלאומי לתעופה אזרחית). הערכה מתבצעת באמצעות דיאלוג קולי אוטומטי, זיהוי דיבור, ניתוח טקסט ושאלות דינמיות, כאשר בסיום ניתן דו"ח מפורט עם ציונים לפי 6 קריטריונים.

---

### 2. טכנולוגיות בשימוש

* Flask – שרת אינטרנט וממשק API
* OpenAI Whisper – תמלול קולי (Speech to Text)
* OpenAI GPT – הפקת שאלות דינמיות וניתוח איכות הדיבור
* GTTS – הפקת דיבור מהטקסט (Text to Speech)
* MongoDB – בסיס נתונים לשמירת פרטי מועמדים ותוצאות
* HTML, CSS, JavaScript – ממשק משתמש
* fpdf2 – הפקת דוחות PDF מסכמים

---

### 3. מבנה המערכת

#### 3.1 מסך מנהל

* טופס קליטת נבחן: שם פרטי, שם משפחה
* הצגת תאריך ושעה נוכחיים
* יצירת מזהה ייחודי (User I.D.) בן 6 תווים
* טבלת ציוני ICAO – בתחילה כל הערכים יהיו N/A

#### 3.2 מסך נבחן

* כותרת: ICAO English Proficiency Assessment
* שדה הזנת User I.D. – טעינת נתוני מועמד
* שלושה כפתורים עיקריים:

  1. **Start Session** – מתחיל את המבחן
  2. **Reset** – מאפס את הנתונים
  3. **Record** – באמצעות לחצן עכבר: לחיצה = הקלטה, שחרור = שליחת הקלטה לתמלול
* הצגת תמלול בזמן אמת: שורות למראיין ולנבחן

---

### 4. שלבי הבחינה

#### 4.1 שלב ראשון – הצגה עצמית

* הפעלת פתיח קולי:

  > Welcome \[User Name] to the ICAO English Proficiency Assessment System for Pilots. My name is Tamar and I am your assessor today. Let's get started, Tell us about yourself and briefly about your experience in the aviation field.
* הנבחן מדבר, ולאחר מכן נשאלות 3 שאלות עוקבות בהתאם לדבריו (באמצעות GPT)

#### 4.2 שלב שני – תיאור תמונה

* שליפת תמונה אקראית ממאגר
* הנבחן מתאר את התמונה ונשאל שאלות עוקבות על פי תוכן דבריו

#### 4.3 שלב שלישי – תרחיש תעופתי

* שליפת תסריט תעופתי ממאגר
* הנבחן מתאר כיצד היה מתנהל בתרחיש, ושוב נשאל 3 שאלות עוקבות

---

### 5. ניתוח ודו"ח תוצאה

* המערכת מנתחת את התמלולים לפי ששת קריטריוני ICAO:

  * Pronunciation – הגייה
  * Structure – מבנה משפט
  * Vocabulary – אוצר מילים
  * Fluency – שטף דיבור
  * Comprehension – הבנה
  * Interaction – אינטראקציה
* תוצאת כל קריטריון נרשמת במסד הנתונים ומופקת גם בקובץ PDF מסכם
* כל תמליל נבחן נשמר לצורכי תחקור וערעור

---

### 6. תוכנית פיתוח בשלבים

| שלב | תיאור                                   | סטטוס       |
| --- | --------------------------------------- | ----------- |
| 1   | יצירת מסכי HTML בסיסיים + Flask Routing | ⬜ טרם התחיל |
| 2   | שילוב Whisper והקלטה מבוססת עכבר        | ⬜ טרם התחיל |
| 3   | יצירת שאלות דינמיות GPT                 | ⬜ טרם התחיל |
| 4   | יצירת הודעות קלט GTTS                   | ⬜ טרם התחיל |
| 5   | חיבור למונגו ושמירת תוצאות              | ⬜ טרם התחיל |
| 6   | הפקת PDF מסכם                           | ⬜ טרם התחיל |
| 7   | מעבר לענן AWS                           | ⬜ טרם התחיל |
| 8   | אינטגרציה מלאה ובדיקות                  | ⬜ טרם התחיל |

---

### 7. הערות והנחיות

* יש חשיבות גבוהה לאיכות התמלול, לכן יש להשתמש ב־Whisper ברמת model גבוהה (למשל `medium` או `large`)
* כל שאלה של המערכת צריכה להיות מושמעת בקול אנושי ורגוע (GTTS)
* שימוש במזהה אקראי לכל משתמש נדרש גם לצורכי פרטיות
* בעת מעבר לענן – נדרש טיפול בזיהוי ואבטחת מידע

---

**מוכן לעבודה** ✅
ניתן להרחיב כל חלק במסמך זה לפי הצורך בפרקי פיתוח נוספים (API, מבנה בסיס נתונים, תרחישים לדוגמה, שאלות GPT וכד')
